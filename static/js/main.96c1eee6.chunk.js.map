{"version":3,"sources":["InputText.js","App.js","reportWebVitals.js","index.js"],"names":["InputText","props","forwardedRef","name","onChange","event","preventDefault","current","target","value","Password","allowClear","className","placeholder","iconRender","visible","EyeTwoTone","EyeInvisibleOutlined","React","ref","App","text","setText","type","onClick","email","password","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAIA,SAASA,EAAUC,GAAQ,IAClBC,EAAsBD,EAAtBC,aAAcC,EAAQF,EAARE,KAEfC,EAAW,SAACD,EAAME,GACtBA,EAAMC,kBACN,OAAIJ,QAAJ,IAAIA,OAAJ,EAAIA,EAAcK,WAChBL,EAAaK,QAAQJ,GAAQE,EAAMG,OAAOC,QAI9C,MAAa,aAATN,EACK,cAAC,IAAMO,SAAP,CACHC,YAAY,EACZC,UAAW,aACXC,YAAY,iBACZT,SAAU,SAAAC,GAAK,OAAID,EAASD,EAAME,IAClCS,WAAY,SAAAC,GAAO,OACfA,EACI,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,OAIV,cAAC,IAAD,CACIN,YAAY,EACZC,UAAW,aACXR,SAAU,SAAAC,GAAK,OAAID,EAASD,EAAME,IAClCQ,YAAW,gBAAWV,KAKjBe,oBACX,SAACjB,EAAOkB,GAAR,OAAgB,cAACnB,EAAD,2BAAcC,GAAd,IAAqBC,aAAciB,Q,QCIxCC,MAnCf,WACE,IAAMD,EAAMD,SAAa,IADZ,EAEWA,WAAe,MAF1B,mBAENG,EAFM,KAEAC,EAFA,KAIb,OACI,sBAAKV,UAAU,MAAf,2BAEE,sBAAKA,UAAW,aAAhB,UACE,cAAC,EAAD,CACIO,IAAKA,EACLhB,KAAM,SAEV,cAAC,EAAD,CACIgB,IAAKA,EACLhB,KAAM,UAEV,cAAC,EAAD,CACIgB,IAAKA,EACLhB,KAAM,gBAIZ,cAAC,IAAD,CAAQS,UAAW,UAAWW,KAAM,UAC5BC,QAAS,kBAAMF,EAAQ,eAAIH,EAAIZ,WADvC,oBAGA,sBAAKK,UAAW,cAAhB,oBACa,OAAJS,QAAI,IAAJA,OAAA,EAAAA,EAAMlB,OAAQ,GADvB,IAC2B,uBAD3B,WAEc,OAAJkB,QAAI,IAAJA,OAAA,EAAAA,EAAMI,QAAS,GAFzB,IAE6B,uBAF7B,cAGiB,OAAJJ,QAAI,IAAJA,OAAA,EAAAA,EAAMK,WAAY,GAH/B,IAGmC,8BCtB5BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.96c1eee6.chunk.js","sourcesContent":["import * as React from 'react';\nimport {Input} from 'antd';\nimport {EyeInvisibleOutlined, EyeTwoTone} from '@ant-design/icons';\n\nfunction InputText(props) {\n  const {forwardedRef, name} = props;\n\n  const onChange = (name, event) => {\n    event.preventDefault();\n    if (forwardedRef?.current) {\n      forwardedRef.current[name] = event.target.value;\n    }\n  };\n\n  if (name === 'password')\n    return <Input.Password\n        allowClear={true}\n        className={'inputValue'}\n        placeholder=\"input password\"\n        onChange={event => onChange(name, event)}\n        iconRender={visible => (\n            visible ?\n                <EyeTwoTone/> :\n                <EyeInvisibleOutlined/>\n        )}\n    />;\n  return (\n      <Input\n          allowClear={true}\n          className={'inputValue'}\n          onChange={event => onChange(name, event)}\n          placeholder={`input ${name}`}\n      />\n  );\n}\n\nexport default React.forwardRef(\n    (props, ref) => <InputText{...props} forwardedRef={ref}/>);\n","import * as React from 'react';\n\nimport './App.css';\nimport InputText from './InputText';\nimport {Button} from 'antd';\n\nfunction App() {\n  const ref = React.useRef({});\n  const [text, setText] = React.useState(null);\n\n  return (\n      <div className=\"App\">\n        useRef example\n        <div className={'inputTable'}>\n          <InputText\n              ref={ref}\n              name={'name'}\n          />\n          <InputText\n              ref={ref}\n              name={'email'}\n          />\n          <InputText\n              ref={ref}\n              name={'password'}\n          />\n        </div>\n\n        <Button className={'primary'} type={'primary'}\n                onClick={() => setText({...ref.current})}>Submit</Button>\n\n        <div className={'textExample'}>\n          Name: {text?.name || ''} <br/>\n          Email: {text?.email || ''} <br/>\n          Password: {text?.password || ''} <br/>\n        </div>\n\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}